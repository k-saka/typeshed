# Stubs for base64 (Python 3.4)

from typing import IO, Union

bytes_like = Union[bytes, bytearray, memoryview]

def b64encode(s: bytes_like, altchars: bytes = ...) -> bytes: ...
def b64decode(s: Union[str, bytes_like], altchars: bytes = ...,
              validate: bool = ...) -> bytes: ...
def standard_b64encode(s: bytes_like) -> bytes: ...
def standard_b64decode(s: Union[str, bytes_like]) -> bytes: ...
def urlsafe_b64encode(s: bytes_like) -> bytes: ...
def urlsafe_b64decode(s: Union[str, bytes_like]) -> bytes: ...
def b32encode(s: bytes_like) -> bytes: ...
def b32decode(s: Union[str, bytes_like], casefold: bool = ...,
              map01: bytes = ...) -> bytes: ...
def b16encode(s: bytes_like) -> bytes: ...
def b16decode(s: Union[str, bytes_like], casefold: bool = ...) -> bytes: ...
def a85encode(b: bytes_like, *, foldspaces: bool = ..., wrapcol: int = ...,
              pad: bool = ..., adobe: bool = ...) -> bytes: ...
def a85decode(b: Union[str, bytes_like], *, foldspaces: bool = ...,
              adobe: bool = ..., ignorechars: Union[str, bytes] = ...) -> bytes: ...
def b85encode(b: bytes_like, pad: bool = ...) -> bytes: ...
def b85decode(b: Union[str, bytes_like]) -> bytes: ...

def decode(input: IO[bytes], output: IO[bytes]) -> None: ...
def decodebytes(s: bytes) -> bytes: ...
def decodestring(s: bytes) -> bytes: ...
def encode(input: IO[bytes], output: IO[bytes]) -> None: ...
def encodebytes(s: bytes) -> bytes: ...
def encodestring(s: bytes) -> bytes: ...
